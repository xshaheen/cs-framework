<Project>

  <Import Project="../Directory.Build.props" />

  <PropertyGroup Label="Packages Compiler settings">
    <IsPackable>true</IsPackable>
    <IsTestProject>false</IsTestProject>
    <GenerateSBOM>true</GenerateSBOM>
  </PropertyGroup>

  <PropertyGroup Label="Packages Source Link">
    <!-- Ensures consistent, reproducible builds -->
    <Deterministic>true</Deterministic>
    <!-- Specifies that the symbol package should be generated in the `.snupkg` format instead of the legacy `.nupkg` -->
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <!--  Ensures that debugging symbols `.pdb` are generated -->
    <IncludeSymbols>true</IncludeSymbols>
    <!-- Optional: Declare that the Repository URL can be published to NuSpec -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <!-- Optional: Embed source files that are not tracked by the source control manager to the PDB -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <!-- Optional: Include PDB in the built .nupkg -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <PropertyGroup Label="Packages Information">
    <Product>Framework</Product>
    <Authors>Mahmoud Shaheen</Authors>
    <Company>Mahmoud Shaheen</Company>
    <Copyright>Copyright (c) Mahmoud Shaheen. All rights Reserved</Copyright>
    <NeutralLanguage>en</NeutralLanguage>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <PropertyGroup Label="CI">
    <ContinuousIntegrationBuild>false</ContinuousIntegrationBuild>
    <!-- Detect CI -->
    <ContinuousIntegrationBuild Condition="'$(ContinuousIntegrationBuild)' == 'false' and '$(CI)' == 'true'">true</ContinuousIntegrationBuild>
    <!-- Detect Azure DevOps / TFS -->
    <ContinuousIntegrationBuild Condition="'$(ContinuousIntegrationBuild)' == 'false' and '$(TF_BUILD)' == 'true'">true</ContinuousIntegrationBuild>
    <!-- Detect GitHub Actions -->
    <ContinuousIntegrationBuild Condition="'$(ContinuousIntegrationBuild)' == 'false' and '$(GITHUB_ACTIONS)' == 'true'">true</ContinuousIntegrationBuild>
    <!-- Detect GitLab CI -->
    <ContinuousIntegrationBuild Condition="'$(ContinuousIntegrationBuild)' == 'false' and '$(GITLAB_CI)' == 'true'">true</ContinuousIntegrationBuild>
    <!--
      Detect TeamCity
      https://www.jetbrains.com/help/teamcity/predefined-build-parameters.html#Server+Build+Properties
    -->
    <IsCIBuild Condition="'$(IsCIBuild)' == 'false' and '$(TEAMCITY_VERSION)' != ''">true</IsCIBuild>
    <!-- Detect Wrench -->
    <IsCIBuild Condition="'$(IsCIBuild)' == 'false' and '$(BUILD_COMMAND)' != ''">true</IsCIBuild>
    <!-- Detect AppVeyor -->
    <IsCIBuild Condition="'$(IsCIBuild)' == 'false' and '$(APPVEYOR)' != ''">true</IsCIBuild>
    <!-- Detect Travis -->
    <IsCIBuild Condition="'$(IsCIBuild)' == 'false' and '$(TRAVIS)' == 'true'">true</IsCIBuild>
    <!-- Detect Circle CI -->
    <IsCIBuild Condition="'$(IsCIBuild)' == 'false' and '$(CIRCLECI)' == 'true'">true</IsCIBuild>
    <!-- Detect AWS CodeBuild -->
    <IsCIBuild Condition="'$(IsCIBuild)' == 'false' and '$(CODEBUILD_BUILD_ID)' != '' and '$(AWS_REGION)' != ''">true</IsCIBuild>
    <!--
      Detect Jenkins
      https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables
    -->
    <IsCIBuild Condition="'$(IsCIBuild)' == 'false' and '$(JENKINS_URL)' != ''">true</IsCIBuild>
    <IsCIBuild Condition="'$(IsCIBuild)' == 'false' and '$(BUILD_ID)' != '' and '$(BUILD_URL)' != ''">true</IsCIBuild>
    <!--
      Google Cloud Build
      https://cloud.google.com/build/docs/configuring-builds/substitute-variable-values
    -->
    <IsCIBuild Condition="'$(IsCIBuild)' == 'false' and '$(BUILD_ID)' != '' and '$(PROJECT_ID)' != ''">true</IsCIBuild>
    <!--
      JetBrains Space
      https://www.jetbrains.com/help/space/automation-environment-variables.html#general
    -->
    <IsCIBuild Condition="'$(IsCIBuild)' == 'false' and '$(JB_SPACE_API_URL)' != ''">true</IsCIBuild>

    <!-- Ensures consistent, reproducible builds -->
    <Deterministic Condition=" '$(IsCIBuild)' == 'true' ">true</Deterministic>
  </PropertyGroup>

  <PropertyGroup Label="Repository">
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/xshaheen/framework.git</RepositoryUrl>
    <PackageProjectUrl>https://github.com/xshaheen/framework</PackageProjectUrl>
    <PackageReleaseNotes>https://github.com/xshaheen/framework/releases</PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup Label="License">
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
  </PropertyGroup>

  <ItemGroup Label="Package References">
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All" />
    <PackageReference Include="MinVer" PrivateAssets="All" />
    <PackageReference Condition="'$(ExcludeSbomPackage)' != 'true'" Include="Microsoft.Sbom.Tool" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup Label="Test Compability">
    <InternalsVisibleTo Include="$(MSBuildProjectName).Tests.Architectures" />
    <InternalsVisibleTo Include="$(MSBuildProjectName).Tests.Units" />
    <InternalsVisibleTo Include="$(MSBuildProjectName).Tests.Integrations" />
  </ItemGroup>

  <ItemGroup Label="README Files">
    <None Include="..\..\README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <AssemblyAttribute Include="System.CLSCompliantAttribute">
      <_Parameter1>false</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

</Project>
