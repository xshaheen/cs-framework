//HintName: TimeOnlyPrimitiveDapperTypeHandler.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by 'Primitives Generator'.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

using System;
using System.Globalization;
using Framework.Primitives;
using Framework.Generator.Primitives;

namespace Framework.Primitives.Converters;

/// <summary>Dapper TypeHandler for <see cref = "TimeOnlyPrimitive"/></summary>
public sealed class TimeOnlyPrimitiveDapperTypeHandler : global::Dapper.SqlMapper.TypeHandler<TimeOnlyPrimitive>
{
    public override void SetValue(global::System.Data.IDbDataParameter parameter, TimeOnlyPrimitive value)
    {
        parameter.Value = value.GetUnderlyingPrimitiveType();
    }

    public override TimeOnlyPrimitive Parse(object value)
    {
        return value switch
        {
            global::System.TimeOnly timeOnly => new TimeOnlyPrimitive(timeOnly)
            string stringValue when !string.IsNullOrEmpty(stringValue) && global::System.TimeOnly.TryParse(stringValue, global::System.Globalization.CultureInfo.InvariantCulture, out var result) => new TimeOnlyPrimitive(result)
            _ => throw new global::System.InvalidCastException($"Unable to cast object of type {value.GetType()} to TimeOnlyPrimitive"),
        };
    }
}
