name: Build üõ†Ô∏è & Publish üöÄ

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - 'tests/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - 'tests/**'
  release:
    types:
      - published
  workflow_dispatch:

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set the build number in MinVer.
  MINVERBUILDMETADATA: build.${{github.run_number}}
  # Build Configuration
  CONFIGURATION: Release
  # Packages Directory
  PACKAGES_DIR: ./artifacts/packages-results
  # Set the NuGet packages restore cache directory.
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build:
    name: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: "Setup .NET"
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: |
            8.0.x
            7.0.x

      - name: "Setup nuget cache"
        uses: actions/cache@v4
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: ".NET Nuke Pack"
        run: ./build.ps1 Pack -Configuration ${{ env.CONFIGURATION }}
        shell: pwsh

      - name: "Publish Artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: packages-results
          path: ${{ env.PACKAGES_DIR }}

  push-github-packages:
    name: "Push GitHub Packages"
    needs: build
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'

    permissions:
      packages: write

    environment:
      name: "GitHub Packages"
      url: https://github.com/xshaheen/framework/packages

    steps:
      - name: "Download Artifacts"
        uses: actions/download-artifact@v4
        with:
          name: packages-results

      - name: ".NET NuGet Add Source"
        run: dotnet nuget add source https://nuget.pkg.github.com/xshaheen/index.json --name GitHub --username xshaheen --password ${{secrets.GITHUB_TOKEN}}
        shell: pwsh

      - name: ".NET NuGet Push"
        run: dotnet nuget push .\*.nupkg --api-key ${{ github.token }} --source GitHub --skip-duplicate
        shell: pwsh
